#compdef alp

# The MIT License (MIT)
#
# Copyright (c) 2020 Shohei YOSHIDA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
#
# zsh completion for alp(https://github.com/tkuchiki/alp)
#

typeset -A opt_args
local context state line

local -a _alp_subcommands
_alp_subcommands=(
  'help:Show help'
  'ltsv:Profile the logs for LTSV'
  'json:Profile the logs for JSON'
  'regexp:Profile the logs that match a regular expression'
)

_arguments -C \
  '(-c --config)'{-c,--config=}'[The configuration file]:config_file:_files' \
  '--file=[The access log file]:access_log:_files' \
  '(-d --dump)'{-d,--dump=}'[Dump profiled data as YAML]:dump_file:_files' \
  '(-l --load)'{-l,--load=}'[Load the profiled YAML data]:load_file:_files' \
  '--sort=[Output the results in sorted order]:sort_count:' \
  '(-r --reverse)'{-r,--reverse}'[Sort results in reverse order]' \
  '(-q --query-string)'{-q,--query-string}'[Include the URI query string]' \
  '--format=[The output format]:format:(table markdown tsv csv)' \
  '--noheaders[Output no header line at all]' \
  '--show-footers[Output footer line at all]' \
  '--limit=[The maximum number of results to display]:limit:' \
  '--location=[Location name for the timezone]:location:' \
  '(-o --output)'{-o,--output=}'[Specifies the results to display separated by commas]:output:' \
  '(-m --matching-groups)'{-m,--matching-groups=}'[Specifies URI matching groups separated by commas]:matching_groups:' \
  '(-f --filters)'{-f,--filters=}'[Only the los are profiled that match the conditions]:filter:' \
  '--pos=[The position file]:pos_file:_files' \
  '--nosave-pos[Do not save position file]' \
  '(- : *)--help[Show context-sensitive help]' \
  '(- : *)--help-long[Show long help]' \
  '(- : *)--help-man[Show help as manpage]' \
  '(- : *)--version[Show application version]' \
  '*::arg:->subcmd' \
  && ret=0

if [[ "$state" == "subcmd" ]];then
  if (( CURRENT == 1)); then
    _describe -t commands "alp command" _alp_subcommands -V1
    return
  else
    local opts curcontext

    case "$words[1]" in
      help)
        _arguments -s : "" "*::subcommands:(help ltsv json regexp)"
        ;;
      ltsv)
        opts=(
          "--uri-label=[Change the uri label]"
          "--method-label=[Change the method label]"
          "--time-label=[Change the time label]"
          "--apptime-label=[Change the apptime label]"
          "--reqtime-label=[Change the reqtime label]"
          "--size-label=[Change the size label]"
          "--status-label=[Change the status label]" 
        )
        ;;
      json)
        opts=(
          "--uri-key=[Change the uri key]"
          "--method-key=[Change the method key]"
          "--time-key=[Change the time key]"
          "--restime-key=[Change the response_time key]"
          "--reqtime-key=[Change the request_time label]"
          "--body-bytes-key=[Change the body_bytes key]"
          "--status-key=[Change the status key]" 
        )
        ;;
      regexp)
        opts=(
          "--pattern=[Regular expressions pattern matching the log]"
          "--uri-subexp=[Change the uri sub expression]"
          "--method-subexp=[Change the method sub expression]"
          "--time-subexp=[Change the time sub expression]"
          "--restime-subexp=[Change the response_time sub expression]"
          "--reqtime-subexp=[Change the request_time sub expression]"
          "--body-bytes-subexp=[Change the body_bytes sub expression]"
          "--status-subexp=[Change the status sub expression]" 
        )
        ;;
    esac
    _arguments -s : "$opts[@]" "*::Files:_files"
  fi
fi

# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=zsh sw=2 ts=2 et
